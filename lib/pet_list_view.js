// Generated by CoffeeScript 1.10.0
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.PetListView = (function(superClass) {
    extend(PetListView, superClass);

    function PetListView(views, featuredPets) {
      this.views = views;
      this.featured = featuredPets;
    }

    PetListView.prototype.render = function() {
      this.renderList();
      this.renderFilteringBar();
      this.renderFeatured();
      window.listView = this;
      window.displayPetList = function(filterType) {
        return window.listView.renderList(filterType);
      };
      return window.selectPet = function(index, element) {
        return window.listView.selectPet(index, element);
      };
    };

    PetListView.prototype.renderList = function(filter) {
      var i, petOutput, view;
      petOutput = (function() {
        var j, len, ref, results;
        ref = this.views;
        results = [];
        for (i = j = 0, len = ref.length; j < len; i = ++j) {
          view = ref[i];
          if (view.pet.matchesFilter(filter)) {
            results.push("<li>" + (view.formattedLink(i)) + "</li>");
          }
        }
        return results;
      }).call(this);
      return this.renderToElement("available_pets", petOutput.join(""));
    };

    PetListView.prototype.selectPet = function(petIndex, element) {
      var j, len, link, petView, ref;
      petView = this.views[petIndex];
      this.renderToElement("pet_information", petView.formattedDescription());
      ref = document.querySelectorAll("#available_pets a");
      for (j = 0, len = ref.length; j < len; j++) {
        link = ref[j];
        link.className = "";
      }
      return element.className = "selected";
    };

    PetListView.prototype.renderFeatured = function() {
      var chosenPetIndex, chosenPetName, chosenPetView, fullListIndex, i, j, len, ref, ref1, view;
      if (this.featured == null) {
        return;
      }
      chosenPetIndex = Math.floor(Math.random() * this.featured.length);
      chosenPetName = this.featured[chosenPetIndex];
      ref = this.views;
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        view = ref[i];
        if (view.pet.name === chosenPetName) {
          ref1 = [view, i], chosenPetView = ref1[0], fullListIndex = ref1[1];
        }
      }
      return this.renderToElement("featured", "<span class='title'>Featured Pet</span>" + chosenPetView.formattedLink(fullListIndex, false));
    };

    PetListView.prototype.renderFilteringBar = function() {
      var filteringOutput, type;
      filteringOutput = (function() {
        var j, len, ref, results;
        ref = Animal.CATEGORIES;
        results = [];
        for (j = 0, len = ref.length; j < len; j++) {
          type = ref[j];
          results.push("<li><a href='#' onclick='displayPetList(\"" + type + "\")'>" + type + "</a></li>");
        }
        return results;
      })();
      return this.renderToElement("filtering_opts", filteringOutput.join(""));
    };

    return PetListView;

  })(View);

}).call(this);
